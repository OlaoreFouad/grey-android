import dependencies.Dependencies
import dependencies.Modules
import dependencies.TestDependencies
import dependencies.AndroidTestDependencies
import dependencies.Application
import dependencies.AnnotationProcessing

plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'dagger.hilt.android.plugin'
    id 'kotlin-kapt'
    id 'androidx.navigation.safeargs'
}

android {
    compileSdk Application.compileSdk

    defaultConfig {
        applicationId Application.applicationId
        minSdk Application.minSdk
        targetSdk Application.targetSdk
        versionCode Application.versionCode
        versionName Application.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    dataBinding {
        enabled = true
    }
}

kapt {
    correctErrorTypes = true
}

dependencies {

    implementation project(Modules.domain)
    implementation project(Modules.data)

    implementation Dependencies.ktxCore
    implementation Dependencies.appCompat
    implementation Dependencies.googleMaterial
    implementation Dependencies.constraintLayout
    implementation Dependencies.legacySupport

    testImplementation TestDependencies.junit
    testImplementation TestDependencies.mockitoCore
    testImplementation TestDependencies.archCoreTesting
    testImplementation TestDependencies.kotlinCoroutinesTest
    androidTestImplementation AndroidTestDependencies.junit
    androidTestImplementation AndroidTestDependencies.espresso

    // navigation component.
    implementation Dependencies.navigationFragmentKtx
    implementation Dependencies.navigationUiKtx

    // dagger hilt.
    implementation Dependencies.daggerHilt
    kapt AnnotationProcessing.daggerHiltCompiler

    // ktx
    implementation Dependencies.fragmentKtx
    implementation Dependencies.activityKtx

    // circle image view
    implementation Dependencies.circleImageView

    // glide
    implementation Dependencies.glide
    annotationProcessor AnnotationProcessing.glideCompiler

}
